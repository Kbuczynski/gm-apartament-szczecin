@mixin respond-to($breakpoint) {
    // Phone
    @if $breakpoint == "small" {
        @media (max-width: 800px) {
            @content;
        }
    }
    // Tablet
    @else if $breakpoint == "medium" {
        @media (max-width: 1100px) {
            @content;
        }
    }
    // Only desktop
    @else if $breakpoint == "large" {
        @media (min-width: 1100px) {
            @content;
        }
    }
}

@mixin underline-color-hover() {
    @include respond-to('large') {
        position: relative;
        transition: color .2s .1s ease-in-out;

        &::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            padding-bottom: .2rem;
            border-bottom: .1rem solid $blue;
            transform: scale(0);
            transition: transform .2s .1s ease-in-out;
        }

        &:hover::before {
            transform: scale(1);
        }

        &:hover {
            color: $blue;
        }
    }
}

@mixin background-opacity() {
    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: $gray;
        z-index: -1;
        filter: opacity(30%);
    }
}

@mixin button() {
    padding: 1rem 1.5rem;
    border: none;
    border-radius: .5rem;
    background-color: $blue;
    color: $white;
    text-align: center;
    cursor: pointer;
}

@mixin title-section() {
    font-size: 3.5rem;
    position: relative;

    &::before {
        content: "";
        position: absolute;
        bottom: -1rem;
        left: 50%;
        transform: translateX(-50%);
        width: 25%;
        border-top: .4rem solid $blue;

        @include respond-to('small') {
            border-top: .3rem solid $blue;
        }
    }
}

@mixin contact-link-icon($icon) {
    &::before {
        font-family: 'fontello';
        content: $icon;
        position: absolute;
        left: -1rem;
        top: 50%;
        transform: translateY(-50%);
        color: $blue;

        @include respond-to('small') {
            left: 3rem;
        }
    }
}

.reset-translate {
    transform: translate(0) !important;
}